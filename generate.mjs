/**
 * This script is used to calculate all tz center coordinates
 * It relies on data https://github.com/evansiroky/timezone-boundary-builder/
 *
 * Go to Releases https://github.com/evansiroky/timezone-boundary-builder/releases
 * Download a file timezones.geojson.zip
 * Paste its content (combined.json) into this folder (so require('./combined.json') works)
 * Run `npm run generate`
 */

import combined from './combined.json' assert { type: 'json' }
import { writeFileSync } from 'fs'
import GeoJSONReader from 'jsts/org/locationtech/jts/io/GeoJSONReader.js'
import Centroid from 'jsts/org/locationtech/jts/algorithm/Centroid.js'

const geoJsonReader = new GeoJSONReader()
const round = n => Math.round(n * 100) / 100

const result = combined.features.reduce((acc, feature) => {
  const timezoneName = feature.properties.tzid
  const geometry = geoJsonReader.read(JSON.stringify(feature.geometry))
  const centroid = new Centroid(geometry)
  const { x, y } = centroid.getCentroid()

  return {
    ...acc,
    [timezoneName]: [round(x), round(y)],
  }
}, {})

const coordinates = JSON.stringify(result, null, 2)
const fileContent = [
  '/** generated by ../generateTimeZonesCoordinates.js */',
  `export const timeZoneCoordinates: Record<string, [number, number]> = ${coordinates}`,
  '',
].join('\n')

writeFileSync('./src/timeZoneCoordinates.ts', fileContent)
